/* eslint-disable import/no-unresolved */
import ReactDOM from "react-dom";
import { useState, useEffect } from "react";

import { Navbar } from "./components/Navbar";
import { DuvidaAluguel } from "./components/DuvidaAluguel.jsx";
import { DuvidaDoc } from "./components/DuvidaDoc.jsx";
import { DuvidaVendas } from "./components/DuvidaVendas.jsx";
import { Footer } from "./components/Footer.jsx";

import { api } from './plugins/api';

import "../sass/duvidas.scss";

import iconSearch from "../../public/assets/svg/icon-search.svg";
import iconDoc from "../../public/assets/svg/icon-doc.svg";
import iconAluguel from "../../public/assets/svg/icon-aluguel.svg";
import iconVenda from "../../public/assets/svg/icon-venda.svg";

export default function Duvidas() {
    const [cmsInfo, setCmsInfo] = useState({});
    const [changeContent, setChangeContent] = useState("doc");
    const [documentation, setDocumentation] = useState([]);
    const [rent, setRent] = useState([]);
    const [sale, setSale] = useState([]);

    const handleContent = (event) => {
        setChangeContent(event);
    };

    useEffect(() => {
        const getCmsInfo = async () => {
            await fetch('https://fathomless-chamber-79732.herokuapp.com/api/info', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                },
            })
            .then(response => response.json())
            .then(data => setCmsInfo(data.data.attributes));
        }
        getCmsInfo();
    }, [])


    useEffect(() => {
        const getRent = async () => {
            await fetch('https://fathomless-chamber-79732.herokuapp.com/api/rents?populate=*', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                },
            })
            .then(response => response.json())
            .then(data => setRent(data.data));
        }
        getRent();
    }, [])

    useEffect(() => {
        const getAnnouncement = async () => {
            await fetch('https://fathomless-chamber-79732.herokuapp.com/api/announcements?populate=*', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                },
            })
            .then(response => response.json())
            .then(data => setAnnouncement(data.data));
        }
        getAnnouncement();
    }, [])

    useEffect(() => {
        const getSale = async () => {
            await fetch('https://fathomless-chamber-79732.herokuapp.com/api/sales?populate=*', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                },
            })
            .then(response => response.json())
            .then(data => setSale(data.data));
        }
        getSale();
    }, [])

    useEffect(() => {
        const getDocumentations = async () => {
            await fetch('https://fathomless-chamber-79732.herokuapp.com/api/documentations?populate=*', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                },
            })
            .then(response => response.json())
            .then(data => setDocumentation(data.data));
        }
        getDocumentations();
    }, [])

    const [search, setSearch] = useState('');
    const handleSearch = () => {
        console.log(search);
    }


    return (
        <>
            <header className="header__duvidas">
                <Navbar />
                <h1>Dúvidas</h1>
            </header>
            <div className="search__duvida">
                <span>
                    Selecione abaixo uma categoria ou procure no campo de busca
                    ao lado
                </span>

                <div className="content__search">
                    <input
                        type="text"
                        placeholder="Digite sua dúvida ou termo"
                        onChange={(e) => setSearch(e.target.value) }
                    />

                    <button type="submit" onClick={handleSearch}>
                        <img src={iconSearch} alt="Search" />
                    </button>
                </div>
            </div>

            <div className="container__buttons">
                <button
                    type="button"
                    className={changeContent === "doc" ? "active" : ""}
                    onClick={() => handleContent("doc")}
                >
                    <svg  className={changeContent === "doc" ? "active__svg" : ""} width="34" height="41" viewBox="0 0 34 41" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M20.5 1H4.9C3.86566 1 2.87368 1.41089 2.14228 2.14228C1.41089 2.87368 1 3.86566 1 4.9V36.1C1 37.1343 1.41089 38.1263 2.14228 38.8577C2.87368 39.5891 3.86566 40 4.9 40H28.3C29.3343 40 30.3263 39.5891 31.0577 38.8577C31.7891 38.1263 32.2 37.1343 32.2 36.1V12.7L20.5 1Z" stroke="#CACBCB" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="M20.5 1V12.7H32.2" stroke="#CACBCB" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="M24.3998 22.45H8.7998" stroke="#CACBCB" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="M24.3998 30.25H8.7998" stroke="#CACBCB" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="M12.6998 14.65H10.7498H8.7998" stroke="#CACBCB" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                    <span>Documentação</span>
                </button>
                <button
                    type="button"
                    className={changeContent === "rent" ? "active" : ""}
                    onClick={() => handleContent("rent")}
                >
                    <svg className={changeContent === "rent" ? "active__svg" : ""} width="42" height="47" viewBox="0 0 42 47" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M3.55316 38.3322C4.1896 39.2571 5.21591 39.7543 6.2601 39.7543C6.90128 39.7543 7.54902 39.5668 8.11725 39.1758C9.61113 38.1495 9.98898 36.1053 8.96193 34.611C8.3255 33.6864 7.29882 33.1893 6.25463 33.1893C6.02267 33.1893 5.79144 33.2229 5.5624 33.2729C5.30272 32.4997 5.16339 31.6765 5.16339 30.8362C5.16339 28.7277 6.01574 26.8359 7.35973 25.5295C7.99616 26.0048 8.76316 26.2597 9.54293 26.2597C10.2552 26.2597 10.9752 26.0514 11.6065 25.6167C13.2663 24.4762 13.6858 22.2051 12.5453 20.5449C11.8381 19.5175 10.6973 18.9653 9.53709 18.9653C8.82443 18.9653 8.10448 19.1736 7.47315 19.608C5.8932 20.6937 5.44058 22.804 6.38556 24.4357C4.74178 26.0095 3.70452 28.2952 3.70452 30.8362C3.70452 31.892 3.89053 32.9256 4.23482 33.8918C2.88026 34.9517 2.56514 36.8956 3.55316 38.3322ZM10.7793 24.4146C10.4128 24.6677 9.98533 24.8008 9.54293 24.8008C9.20593 24.8008 8.88096 24.7209 8.58664 24.5787C9.4357 24.0736 10.3997 23.7752 11.4216 23.7238C11.2648 23.9901 11.051 24.2286 10.7793 24.4146ZM7.3889 22.2142C7.49504 21.6394 7.81854 21.1409 8.29997 20.8101C8.66651 20.5577 9.09433 20.4242 9.53709 20.4242C10.2592 20.4242 10.9351 20.7787 11.3428 21.371C11.5295 21.6431 11.6441 21.9429 11.6951 22.2485C10.1761 22.2551 8.7555 22.7157 7.54573 23.5097C7.36337 23.1067 7.30648 22.6588 7.3889 22.2142ZM6.25463 34.6482C6.85678 34.6482 7.41954 34.944 7.75946 35.4375C8.03409 35.8368 8.13658 36.3186 8.05087 36.7953C8.00929 36.7333 7.96005 36.6749 7.89805 36.6264C7.20873 36.0877 6.63357 35.4137 6.18971 34.6533C6.21159 34.6526 6.23311 34.6482 6.25463 34.6482ZM6.99975 37.776C7.10734 37.8599 7.23244 37.9 7.35863 37.9161C7.33492 37.9343 7.31523 37.9566 7.29006 37.9741C6.98443 38.1841 6.62847 38.2954 6.2601 38.2954C5.65832 38.2954 5.09556 37.9996 4.75528 37.5054C4.47918 37.1039 4.37597 36.6191 4.46459 36.1399C4.52368 35.82 4.66993 35.533 4.876 35.2923C5.41906 36.2504 6.13537 37.1002 6.99975 37.776Z" fill="#CACBCB"/>
                        <path d="M2.77025 27.5417C2.95699 26.9738 3.18931 26.4289 3.46468 25.9125C1.10386 21.7171 2.26256 16.2967 6.24456 13.5121C7.78403 12.4354 9.5799 11.8668 11.4381 11.8668C13.1414 11.8668 14.8078 12.3442 16.2572 13.2466C16.4935 13.3939 16.7612 13.4668 17.0282 13.4668C17.3214 13.4668 17.6139 13.3786 17.8645 13.2032L34.4588 1.59126C34.5459 1.53619 34.8016 1.45887 34.9307 1.45887C34.9668 1.46142 35.0029 1.46288 35.039 1.46288C35.0394 1.46288 35.0398 1.46288 35.0401 1.46288L39.2194 1.45997L37.9998 6.41028L37.3645 6.85451L34.4982 6.23741C34.3964 6.21552 34.2936 6.20458 34.1911 6.20458C33.9048 6.20458 33.6217 6.28883 33.3799 6.45077C33.0517 6.67033 32.8263 7.01353 32.7555 7.40232L32.3452 9.65737L30.0034 8.98957C29.8721 8.952 29.7375 8.93377 29.6033 8.93377C29.2929 8.93377 28.9869 9.03261 28.7323 9.22226C28.368 9.49361 28.1502 9.91887 28.1444 10.3729L28.1178 12.3734L26.1064 11.8453C25.9842 11.8136 25.8598 11.7975 25.7358 11.7975C25.4553 11.7975 25.1782 11.8785 24.9385 12.0346C24.5939 12.2596 24.3597 12.62 24.2948 13.0266L23.7342 16.5447L21.1509 18.3508C20.6947 18.6699 20.4594 19.221 20.5455 19.771C21.1002 23.3321 19.575 26.9505 16.6602 28.9889C15.12 30.0666 13.3223 30.6363 11.4622 30.6363C9.80056 30.6363 8.19908 30.1782 6.80659 29.3489C6.68842 29.8223 6.62204 30.3201 6.62204 30.8362C6.62204 30.8643 6.62532 30.892 6.62605 30.9204C8.12759 31.6933 9.78779 32.0952 11.4622 32.0952C13.5458 32.0952 15.6499 31.4763 17.4965 30.1852C20.9967 27.7375 22.6102 23.5455 21.9872 19.5471L25.0779 17.3861L25.7362 13.2568L28.8002 14.0613C28.8625 14.0774 28.9235 14.085 28.9814 14.085C29.3097 14.085 29.557 13.8389 29.5621 13.469L29.6033 10.3926L32.7453 11.2888C32.8139 11.3084 32.8821 11.3176 32.9485 11.3176C33.2811 11.3176 33.5681 11.0831 33.6334 10.726L34.1907 7.66382L37.2999 8.33308C37.3452 8.34256 37.3958 8.3473 37.448 8.3473C37.6384 8.3473 37.8605 8.28749 37.9987 8.1912L38.9576 7.52049C39.1337 7.39685 39.3223 7.12659 39.377 6.91651L40.8789 0.820251C40.9905 0.398637 40.7334 0.0320952 40.3067 0.000364718L35.0387 0.00437662C35.0055 0.00145887 34.9705 0 34.9344 0C34.5142 0 33.9518 0.166311 33.6269 0.393166L17.0285 12.0076C15.3395 10.9558 13.3981 10.4076 11.4385 10.4072C9.3567 10.4072 7.2541 11.0254 5.40899 12.3158C0.555685 15.7102 -0.672321 22.4619 2.66521 27.3962C2.69913 27.4461 2.73597 27.4924 2.77025 27.5417Z" fill="#CACBCB"/>
                        <path d="M39.0823 26.2597H22.5084C22.2877 26.7619 22.0342 27.2495 21.7494 27.7186H39.0823C39.8868 27.7186 40.5411 28.3732 40.5411 29.1774V43.7662C40.5411 44.5704 39.8868 45.225 39.0823 45.225H9.64222C8.48424 45.225 6.77481 44.3986 6.05558 43.4912L1.91859 38.271C1.33139 37.5291 1.30404 36.1574 1.86206 35.3933L2.7837 34.1307C2.58201 33.5227 2.44013 32.8921 2.35078 32.2495L0.683653 34.5333C-0.262791 35.8295 -0.221213 37.919 0.775197 39.1766L4.91219 44.3968C5.9086 45.6543 8.0371 46.6835 9.64222 46.6835H39.0823C40.687 46.6835 42 45.3706 42 43.7658V29.1774C42 27.5727 40.687 26.2597 39.0823 26.2597Z" fill="#CACBCB"/>
                        </svg>

                    <span>Aluguel</span>
                </button>
                <button
                    type="button"
                    className={changeContent === "buy" ? "active" : ""}
                    onClick={() => handleContent("buy")}
                >
                    <svg className={changeContent === "buy" ? "active__svg" : ""} width="47" height="46" viewBox="0 0 47 46" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M13.8015 29.8987C13.3466 29.8987 12.9019 30.0336 12.5237 30.2864C12.1454 30.5391 11.8506 30.8983 11.6765 31.3186C11.5025 31.7389 11.4569 32.2013 11.5457 32.6475C11.6344 33.0936 11.8535 33.5035 12.1751 33.8251C12.4968 34.1468 12.9066 34.3658 13.3528 34.4546C13.7989 34.5433 14.2614 34.4978 14.6817 34.3237C15.1019 34.1496 15.4612 33.8548 15.7139 33.4766C15.9666 33.0983 16.1015 32.6537 16.1015 32.1988C16.1015 31.5888 15.8592 31.0037 15.4278 30.5724C14.9965 30.1411 14.4115 29.8987 13.8015 29.8987ZM13.8015 32.9654C13.6499 32.9654 13.5016 32.9205 13.3755 32.8362C13.2495 32.752 13.1512 32.6322 13.0932 32.4922C13.0351 32.3521 13.02 32.1979 13.0495 32.0492C13.0791 31.9005 13.1521 31.7639 13.2594 31.6566C13.3666 31.5494 13.5032 31.4764 13.6519 31.4468C13.8006 31.4172 13.9548 31.4324 14.0949 31.4904C14.235 31.5485 14.3547 31.6467 14.4389 31.7728C14.5232 31.8989 14.5682 32.0471 14.5682 32.1988C14.5682 32.4021 14.4874 32.5971 14.3436 32.7409C14.1998 32.8847 14.0048 32.9654 13.8015 32.9654Z" fill="#CACBCB"/>
                            <path d="M19.9352 19.1653H26.0686C26.4753 19.1653 26.8653 19.0037 27.1528 18.7162C27.4404 18.4286 27.6019 18.0386 27.6019 17.6319V11.4986C27.6019 11.0919 27.4404 10.7019 27.1528 10.4143C26.8653 10.1268 26.4753 9.96521 26.0686 9.96521H19.9352C19.5285 9.96521 19.1385 10.1268 18.851 10.4143C18.5634 10.7019 18.4019 11.0919 18.4019 11.4986V17.6319C18.4019 18.0386 18.5634 18.4286 18.851 18.7162C19.1385 19.0037 19.5285 19.1653 19.9352 19.1653ZM19.9352 15.3319H22.2352V17.6319H19.9352V15.3319ZM23.7686 17.6319V15.3319H26.0686V17.6319H23.7686ZM26.0686 13.7986H23.7686V11.4986H26.0686V13.7986ZM22.2352 11.4986V13.7986H19.9352V11.4986H22.2352Z" fill="#CACBCB"/>
                            <path d="M43.7018 22.232H42.1685V18.6363L42.3218 18.7444C42.5916 18.9274 42.8964 19.0527 43.2169 19.1124C43.5374 19.1721 43.8668 19.1649 44.1845 19.0913C44.5021 19.0176 44.801 18.8791 45.0626 18.6845C45.3242 18.4898 45.5427 18.2432 45.7044 17.9601C45.9869 17.4539 46.0708 16.8606 45.9397 16.2959C45.8086 15.7312 45.4719 15.2356 44.9952 14.9057L23.8765 0.272949C23.6199 0.0952227 23.3153 0 23.0032 0C22.6911 0 22.3865 0.0952227 22.13 0.272949L1.00354 14.9072C0.527306 15.2373 0.191027 15.7329 0.0602119 16.2974C-0.0706035 16.8619 0.0134142 17.4549 0.295897 17.9609C0.45759 18.2444 0.676229 18.4914 0.938054 18.6864C1.19988 18.8813 1.49922 19.0199 1.81724 19.0935C2.13526 19.1671 2.46507 19.1741 2.78591 19.114C3.10676 19.0539 3.41169 18.9281 3.68152 18.7444L3.83486 18.6355V43.6988C3.83486 44.3088 4.07718 44.8938 4.50852 45.3252C4.93986 45.7565 5.52487 45.9988 6.13488 45.9988H39.8685C40.4785 45.9988 41.0635 45.7565 41.4948 45.3252C41.9262 44.8938 42.1685 44.3088 42.1685 43.6988V37.5654H43.7018C44.3118 37.5654 44.8969 37.3231 45.3282 36.8918C45.7595 36.4604 46.0019 35.8754 46.0019 35.2654V24.532C46.0019 23.922 45.7595 23.337 45.3282 22.9056C44.8969 22.4743 44.3118 22.232 43.7018 22.232ZM2.80062 17.4871C2.62535 17.5955 2.41519 17.6327 2.21337 17.5909C2.01154 17.5491 1.83339 17.4316 1.71555 17.2625C1.59771 17.0934 1.54915 16.8856 1.57985 16.6818C1.61056 16.478 1.71819 16.2937 1.88061 16.1668L23.0017 1.53183L44.1243 16.1653C44.2956 16.2893 44.4114 16.4757 44.4465 16.6842C44.4817 16.8928 44.4334 17.1068 44.3121 17.2801C44.1909 17.4534 44.0063 17.5721 43.7984 17.6105C43.5904 17.6489 43.3756 17.604 43.2004 17.4855L23.8765 4.10631C23.6199 3.92859 23.3153 3.83336 23.0032 3.83336C22.6911 3.83336 22.3865 3.92859 22.13 4.10631L2.80062 17.4871ZM5.3682 43.6988V17.5737L23.0017 5.36519L40.6352 17.5745V22.232H26.835C26.225 22.232 25.64 22.4743 25.2087 22.9056C24.7773 23.337 24.535 23.922 24.535 24.532V35.2654C24.535 35.8754 24.7773 36.4604 25.2087 36.8918C25.64 37.3231 26.225 37.5654 26.835 37.5654H32.2017V44.4655H23.7683V43.6988C23.7664 43.2248 23.618 42.763 23.3435 42.3765C23.0691 41.9901 22.6819 41.6979 22.235 41.5399V23.7653C22.235 23.1553 21.9927 22.5703 21.5613 22.139C21.13 21.7076 20.545 21.4653 19.935 21.4653H10.7349C10.1249 21.4653 9.53989 21.7076 9.10855 22.139C8.67722 22.5703 8.43489 23.1553 8.43489 23.7653V41.5399C7.98799 41.6979 7.60082 41.9901 7.32635 42.3765C7.05188 42.763 6.90351 43.2248 6.90155 43.6988V44.4655H6.13488C5.93154 44.4655 5.73654 44.3847 5.59276 44.2409C5.44898 44.0972 5.3682 43.9022 5.3682 43.6988ZM20.7017 41.3988H9.96824V23.7653C9.96824 23.562 10.049 23.367 10.1928 23.2232C10.3366 23.0794 10.5316 22.9987 10.7349 22.9987H19.935C20.1383 22.9987 20.3333 23.0794 20.4771 23.2232C20.6209 23.367 20.7017 23.562 20.7017 23.7653V41.3988ZM8.43489 44.4655V43.6988C8.43489 43.4955 8.51567 43.3005 8.65945 43.1567C8.80323 43.0129 8.99823 42.9321 9.20157 42.9321H21.4683C21.6717 42.9321 21.8667 43.0129 22.0105 43.1567C22.1542 43.3005 22.235 43.4955 22.235 43.6988V44.4655H8.43489ZM33.7351 44.4655V37.5654H36.8018V44.4655H33.7351ZM40.6352 43.6988C40.6352 43.9022 40.5544 44.0972 40.4106 44.2409C40.2668 44.3847 40.0718 44.4655 39.8685 44.4655H38.3351V37.5654H40.6352V43.6988ZM44.4685 35.2654C44.4685 35.4688 44.3877 35.6638 44.244 35.8075C44.1002 35.9513 43.9052 36.0321 43.7018 36.0321H26.835C26.6317 36.0321 26.4367 35.9513 26.2929 35.8075C26.1491 35.6638 26.0684 35.4688 26.0684 35.2654V24.532C26.0684 24.3287 26.1491 24.1337 26.2929 23.9899C26.4367 23.8461 26.6317 23.7653 26.835 23.7653H43.7018C43.9052 23.7653 44.1002 23.8461 44.244 23.9899C44.3877 24.1337 44.4685 24.3287 44.4685 24.532V35.2654Z" fill="#CACBCB"/>
                            <path d="M39.1017 29.1321C38.9672 29.1319 38.835 29.0964 38.7186 29.029C38.6021 28.9617 38.5054 28.8648 38.4382 28.7482C38.3711 28.6317 38.3357 28.4995 38.3358 28.3649C38.3359 28.2304 38.3714 28.0982 38.4387 27.9817C38.506 27.8653 38.6028 27.7685 38.7194 27.7013C38.8359 27.6341 38.9681 27.5987 39.1027 27.5987C39.2372 27.5988 39.3694 27.6342 39.4859 27.7015C39.6024 27.7688 39.6992 27.8655 39.7664 27.9821C39.8713 28.1516 40.0381 28.2736 40.2314 28.3222C40.4247 28.3708 40.6293 28.3423 40.8019 28.2426C40.9745 28.1428 41.1015 27.9798 41.156 27.7881C41.2104 27.5963 41.188 27.3909 41.0936 27.2154C40.816 26.7487 40.3819 26.3955 39.8684 26.2187V26.0654C39.8684 25.862 39.7876 25.667 39.6439 25.5233C39.5001 25.3795 39.3051 25.2987 39.1017 25.2987C38.8984 25.2987 38.7034 25.3795 38.5596 25.5233C38.4158 25.667 38.3351 25.862 38.3351 26.0654V26.2064C37.8239 26.3865 37.393 26.7416 37.1186 27.2089C36.8442 27.6762 36.7441 28.2255 36.8359 28.7596C36.9278 29.2937 37.2056 29.778 37.6203 30.1268C38.0351 30.4756 38.5598 30.6664 39.1017 30.6654C39.2363 30.6655 39.3684 30.7011 39.4849 30.7685C39.6014 30.8358 39.698 30.9327 39.7652 31.0492C39.8324 31.1658 39.8677 31.298 39.8677 31.4326C39.8676 31.5671 39.8321 31.6993 39.7648 31.8157C39.6974 31.9322 39.6006 32.029 39.4841 32.0962C39.3675 32.1634 39.2354 32.1988 39.1008 32.1988C38.9663 32.1987 38.8341 32.1633 38.7176 32.096C38.6011 32.0287 38.5043 31.9319 38.437 31.8154C38.3322 31.6459 38.1654 31.5239 37.9721 31.4753C37.7788 31.4266 37.5741 31.4552 37.4015 31.5549C37.2289 31.6546 37.102 31.8176 37.0475 32.0094C36.9931 32.2012 37.0155 32.4066 37.1099 32.5821C37.3879 33.0491 37.8226 33.4023 38.3366 33.5788V33.7321C38.3366 33.9354 38.4174 34.1304 38.5612 34.2742C38.7049 34.418 38.8999 34.4988 39.1033 34.4988C39.3066 34.4988 39.5016 34.418 39.6454 34.2742C39.7892 34.1304 39.8699 33.9354 39.8699 33.7321V33.591C40.3812 33.411 40.8122 33.0557 41.0866 32.5883C41.361 32.1208 41.461 31.5713 41.369 31.0371C41.2769 30.503 40.9988 30.0186 40.5838 29.6699C40.1688 29.3212 39.6438 29.1307 39.1017 29.1321Z" fill="#CACBCB"/>
                            <path d="M31.4352 29.1321C31.3007 29.1319 31.1685 29.0964 31.0521 29.029C30.9356 28.9617 30.8389 28.8648 30.7717 28.7482C30.7046 28.6317 30.6692 28.4995 30.6693 28.3649C30.6694 28.2304 30.7049 28.0982 30.7722 27.9817C30.8395 27.8653 30.9363 27.7685 31.0529 27.7013C31.1694 27.6341 31.3016 27.5987 31.4362 27.5987C31.5707 27.5988 31.7029 27.6342 31.8194 27.7015C31.9359 27.7688 32.0327 27.8655 32.0999 27.9821C32.2048 28.1516 32.3716 28.2736 32.5649 28.3222C32.7582 28.3708 32.9628 28.3423 33.1354 28.2426C33.308 28.1428 33.435 27.9798 33.4895 27.7881C33.5439 27.5963 33.5215 27.3909 33.4271 27.2154C33.1495 26.7487 32.7154 26.3955 32.2019 26.2187V26.0654C32.2019 25.862 32.1211 25.667 31.9774 25.5233C31.8336 25.3795 31.6386 25.2987 31.4352 25.2987C31.2319 25.2987 31.0369 25.3795 30.8931 25.5233C30.7493 25.667 30.6686 25.862 30.6686 26.0654V26.2064C30.1574 26.3865 29.7265 26.7416 29.4521 27.2089C29.1777 27.6762 29.0776 28.2255 29.1694 28.7596C29.2612 29.2937 29.5391 29.778 29.9538 30.1268C30.3685 30.4756 30.8933 30.6664 31.4352 30.6654C31.5698 30.6655 31.7019 30.7011 31.8184 30.7685C31.9349 30.8358 32.0315 30.9327 32.0987 31.0492C32.1659 31.1658 32.2012 31.298 32.2012 31.4326C32.2011 31.5671 32.1656 31.6993 32.0983 31.8157C32.0309 31.9322 31.9341 32.029 31.8176 32.0962C31.701 32.1634 31.5688 32.1988 31.4343 32.1988C31.2998 32.1987 31.1676 32.1633 31.0511 32.096C30.9346 32.0287 30.8378 31.9319 30.7705 31.8154C30.6657 31.6459 30.4989 31.5239 30.3056 31.4753C30.1123 31.4266 29.9076 31.4552 29.735 31.5549C29.5624 31.6546 29.4355 31.8176 29.381 32.0094C29.3266 32.2012 29.349 32.4066 29.4434 32.5821C29.7214 33.0491 30.1561 33.4023 30.6701 33.5788V33.7321C30.6701 33.9354 30.7509 34.1304 30.8946 34.2742C31.0384 34.418 31.2334 34.4988 31.4368 34.4988C31.6401 34.4988 31.8351 34.418 31.9789 34.2742C32.1227 34.1304 32.2034 33.9354 32.2034 33.7321V33.591C32.7147 33.411 33.1457 33.0557 33.4201 32.5883C33.6945 32.1208 33.7945 31.5713 33.7025 31.0371C33.6104 30.503 33.3323 30.0186 32.9173 29.6699C32.5023 29.3212 31.9773 29.1307 31.4352 29.1321Z" fill="#CACBCB"/>
                            </svg>

                    <span>Venda</span>
                </button>
            </div>

            <div className="container__conteudo">
                {changeContent === "doc" && <DuvidaDoc datas={documentation} />}
                {changeContent === "rent" && <DuvidaAluguel datas={rent} />}
                {changeContent === "buy" && <DuvidaVendas datas={sale} />}
            </div>

            <Footer data={cmsInfo}/>
        </>
    );
}

if (document.getElementById("duvidas")) {
    ReactDOM.render(<Duvidas />, document.getElementById("duvidas"));
}
